{"version":3,"sources":["components/SignIn.js","components/NavBarElements.js","components/SearchBar.js","components/SearchOutput.js","pages/index.js","pages/session.js","components/UserOutput.js","pages/show.js","pages/user.js","pages/edit.js","App.js","index.js"],"names":["Signin","history","useHistory","console","log","localStorage","getItem","clientId","onSuccess","response","profileObj","setItem","email","name","push","onFailure","buttonText","onLogoutSuccess","removeItem","Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","Navbar","to","activeStyle","src","class","className","onClick","window","location","reload","SearchForm","props","React","useState","searchQuery","setSearchQuery","onSubmit","event","preventDefault","songSearch","type","onChange","target","value","SearchOutput","data","youtubeData","items","snippet","title","lyricsData","videoId","id","fetch","method","headers","Accept","body","JSON","stringify","favsong","result","track","artist","lyrics","GetSearch","baseURL","search","maxResult","key","topicId","setYoutubeData","getYoutubeData","searchTerm","a","Axios","get","randomArtist","Math","round","random","length","setLyricsData","apiLyricsKey","getLyricsArray","api_lyrics","getLyricsData","useEffect","SearchBar","UserOutput","userData","_id","deleteFavorite","delete","whyFavorite","href","ShowFavVideo","infoArray","setInfoArray","getinfo","json","sessionData","forEach","showYoutubeData","setShowYoutubeData","undefined","showlyricsData","setShowLyricsData","favoriteSong","responseLyrics","SignUp","style","display","justifyContent","alignItems","height","Edit","editFavorite","action","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a220754.chunk.js","sourcesContent":["import React from 'react';\nimport {GoogleLogin} from 'react-google-login'\nimport {GoogleLogout} from 'react-google-login'\nimport {useHistory} from 'react-router-dom'\n\nconst Signin = () => {\n\n\tlet history = useHistory();\n\tconsole.log(localStorage.getItem('SessionEmail'))\n\n\tconst responseGoogle = (response) => {\n\t\tconsole.log(response);\n\t\tconsole.log(response.profileObj)\n\t\tlocalStorage.setItem('SessionEmail', response.profileObj.email)\n\t\tlocalStorage.setItem('SessionName', response.profileObj.name)\n        // The useHistory hook gives you access to the history instance that you may use to navigate.\n\t\thistory.push('/show')\n\t}\n\n\n\n\n\tconst responseGoogleFail = (response) => {\n\t\tconsole.log(response);\n\t}\n\n\t// const logoutSucesss = () => {\n\t// \tconsole.log(localStorage.getItem('SessionEmail'))\n\t// \tlocalStorage.removeItem('SessionEmail');\n\t// \tconsole.log('logged our successfully')\n\n\t// }\n\tconst logoutGoogle = () => {\n\t\tconsole.log('logout was succcessful')\n\t\tlocalStorage.removeItem('SessionEmail')\n        localStorage.removeItem('SessionName')\n\t\thistory.push('/')\n\t\t\n\t}\nreturn (\n\t<div>\n\n\n\t{localStorage.getItem('SessionEmail') === null ? <>\n\t<GoogleLogin\n\tclientId = \"174189846765-j4m2iko8mnar7ic4c0p0701e5g5gosq9.apps.googleusercontent.com\"\n\tonSuccess={responseGoogle}\n\tonFailure={responseGoogleFail}\n\t/>     ; </>\n\t:\n\t<GoogleLogout\n\tclientId = \"174189846765-j4m2iko8mnar7ic4c0p0701e5g5gosq9.apps.googleusercontent.com\"\n\tbuttonText=\"Sign Out\"\n\tonLogoutSuccess={logoutGoogle}\n\n\t/> \n\t}\n\t</div>\n);\n};\n\nexport default Signin;","import { FaBars } from 'react-icons/fa';\nimport { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Session from './SignIn';\n\nconst Nav = styled.nav`\n// background: #6B6B6B;\nbackground: black;\nheight: 100px;\ndisplay: flex;\njustify-content: space-between;\npadding: 0.4rem calc((100vw - 1000px) / 2);\nz-index: 12;\n`;\n\nconst NavLink = styled(Link)`\n// color: #808080;\ncolor: white;\ndisplay: flex;\nalign-items: center;\ntext-decoration: none;\npadding: 0 1rem;\nheight: 100%;\ncursor: pointer;\n&.active {\n\tcolor: #28ACEA;\n}\n`;\n\nconst Bars = styled(FaBars)`\ndisplay: none;\ncolor: #808080;\n@media screen and (max-width: 768px) {\n\tdisplay: block;\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\ttransform: translate(-100%, 75%);\n\tfont-size: 1.8 rem;\n\tcursor: pointer;\n}\n`;\n\nconst NavMenu = styled.div`\ndisplay: flex;\nalign-items: center;\nmargin-right: -24px;\n@media screen and (max-width: 768px) {\n\tdisplay: none;\n}\n`;\n\nconst NavBtn = styled.nav`\ndisplay: flex;\nalign-items: center;\nmargin-right: 24px;\n@media screen and (max-width: 768px) {\n\tdisplay: none;\n}\n`;\n\nconst NavBtnLink = styled(Link)`\nborder-radius: 4px;\nbackground: #808080;\npadding: 10px 22px;\ncolor: #000000;\noutline: none;\nborder: none;\ncursor: pointer;\ntransition: all 0.2s ease-in-out;\ntext-decoration: none;\n/* Second Nav */\nmargin-left: 24px;\n&:hover {\n\ttransition: all 0.2s ease-in-out;\n\tbackground: #fff;\n\tcolor: #808080;\n}\n`;\n\nconst Navbar = () => {\n    const pageReload = () => {\n        window.location.reload()\n    }\n    \t\n    return (\n        <>\n         {/* <Nav>\n            <ul >\n\n\n\n            {localStorage.getItem('SessionEmail') === null ? <li><Signin/></li> : ''}\n\n            {localStorage.getItem('SessionEmail') !== null ? <li><Logout/></li> : ''}\n            </ul>\n        </Nav> */}\n        <Nav>\n            <Bars />\n            <NavMenu>\n                <NavLink to='/' activeStyle>\n                    <img src=\"https://i.ibb.co/0jsWS9h/Screen-Shot-2021-06-14-at-10-31-13-PM-removebg-preview.png\" class=\"img-fluid\" />\n                </NavLink>\n                <NavLink to='/' activeStyle>\n                Home\n                </NavLink>\n                <NavLink to='/show' activeStyle>\n                View Your Favorite Video\n                </NavLink>\n                <Session className='session' onClick={pageReload}/>\n            </NavMenu>\n        </Nav>\n        </>\n      );\n    };\n    \n    export default Navbar;","import React, {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\n\nconst SearchForm = (props) => {\n    //State to hold the search query\n    // const [searchQuery, setSearchQuery] = React.useState({searchterm: \"\",});\n    const [searchQuery, setSearchQuery] = React.useState(null);\n    //Updates searchQuery when we type into the form\n    const handleChange = (event) => {\n        setSearchQuery(event.target.value)\n        // console.log(setSearchQuery)\n        console.log(searchQuery)\n    }\n    const handleSubmit = (event) => {\n        //use the event object to detect key and value to update\n        event.preventDefault();\n        //use the search query to pass query to songSearch prop, in new page output\n        props.songSearch(searchQuery)\n\n    }\n\n\n    return (\n\n        <div>\n            <form className = \"field\" onSubmit={handleSubmit}>\n                <input className = \"input\"\n                    type = \"text\"\n                    name = \"searchterm\"\n                    onChange={handleChange}\n                    value = {searchQuery}\n                    />\n                {/* <Link to = '/search'> */}\n                <input className = \"button is-info\" type = \"submit\" value = \"submit\" />\n                {/* </Link> */}\n            </form>\n        </div>\n\n    )\n}\n\nexport default SearchForm;","import React from 'react';\nimport YouTube from 'react-youtube'\n\n\n\nconst SearchOutput = (data) => {\n    console.log(data.youtubeData)\n    console.log(data.youtubeData.items[0].snippet.title)\n    console.log(data.lyricsData)\n    // console.log(lyricsData)\n    let addtofav = () => {\n        \n        fetch(' https://lyrios21.herokuapp.com/favsong', {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        //make sure to serialize your JSON body\n        body: JSON.stringify({\n          email: localStorage.getItem('SessionEmail'),\n          name: localStorage.getItem('SessionName'),\n          favsong: data.lyricsData.result.track + ' ' + data.lyricsData.result.artist\n        }),\n      });\n    }\n\n    let addtofavVideo = () => {\n        \n      fetch(' https://lyrios21.herokuapp.com/favsong', {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      //make sure to serialize your JSON body\n      body: JSON.stringify({\n        email: localStorage.getItem('SessionEmail'),\n        name: localStorage.getItem('SessionName'),\n        favsong: data.youtubeData.items[0].snippet.title\n      }),\n    });\n  }\n\n\n\n    return(\n       <div>\n            \n            {/* <YouTube videoId= {youtubeData.results.items[0].id.videoId} /> */}\n            <div className = 'videoItem'>\n            <div>{data.youtubeData ? <><h4 className =\"videoTitle\">{data.youtubeData.items[0].snippet.title}</h4>  <YouTube videoId= {data.youtubeData.items[0].id.videoId}/> </> :\n            'No YouTube data was gathered'}\n           \n            </div>\n            <br/>\n            \n            {data.lyricsData ?  <button onClick={addtofav} className = \"button is-info\" >Save to My Playlist</button> : ''}    \n            <div>{data.lyricsData ? <> \n            <p className = \"lyrics\">{data.lyricsData.result.lyrics}</p>\n            </>: \n            <>\n             <button onClick={addtofavVideo} className = \"button is-info\" >Save to My Playlist</button> \n            <p>No Lyrics Data Was Found</p>\n            </>}</div>\n            {/* {youtubeData ?   <>     \n            {youtubeData.results.item.map((value, index)=>{\n                console.log(value)\n                return(\n                    <div className = 'videoItem'>\n                       <h4 className = 'videoTitle'>{value.snippet.title}</h4>  <YouTube videoId= {value.id.videoId} className = 'videoIndex'/>\n            \n                    </div>\n                )\n\n            })}</> : <p>Please submit a search request.</p>\n            }   */}\n                \n            </div> \n        </div>\n      \n    )\n\n}\n\n\nexport default SearchOutput","import React, {useState, useEffect} from 'react';\nimport Axios from 'axios'\nimport YouTube from 'react-youtube'\nimport SearchBar from '../components/SearchBar'\nimport SearchOutput from '../components/SearchOutput'\nimport '../index.css';  \n\n\nfunction GetSearch () {\n\tconsole.log(localStorage.getItem('SessionEmail'))\n    \n//YouTubeAPI Call\n    const baseURL = 'https://www.googleapis.com/youtube/v3';\n    const search = '/search?part=snippet';\n    const maxResult = '&maxResults=1';\n    const keyWord = '&q=rihanna';\n    const type = '&type=video';\n    //API Key 1\n    const key = '&key=AIzaSyD5inzevVk7CDg0ipn9yBTXWP_TtekfF0A'; \n    // API Key 2\n    // const key = '&key=AIzaSyAjtiGq13vuyxMjQfPS7Ngj0Mny-7ol3GM'\n    //API Key 3\n    // const key = '&key=AIzaSyAlEKircfin7Ratd0qMcJT50yknQLgk67c';\n    const topicId = '&topicId=04rlf';\n\n    \n    const [youtubeData, setYoutubeData] = React.useState(null)\n    const [searchData, setSearchData] = React.useState(null)\n    const getYoutubeData = async (searchTerm) => {\n        const response = await Axios.get(\n            `${baseURL}${search}${maxResult}${type}${key}${topicId}&q=${searchTerm}`\n        )\n        setYoutubeData(response.data)\n        // setSearchData(response.data)\n        // const youtubeFetch = await response.json();\n        console.log(response.data)\n        // SearchOutput(response.data)\n        return 'response'\n\n    }\n\n    const artist = ['beyonce','sza','ariana grande','jay-z','rihanna','cold play','snoop dogg','bruno mars','marc anthony','bad bunny','incubus',\n    'tiesto','billy joel','john mayer','el alfa','omega','celia cruz','cardi b','miguel','leon bridges']\n    let random = Math.round(Math.random()*artist.length)\n    let randomArtist = artist[random]\n\n    const randomVideo = async (searchTerm) => {\n\n        const response = await Axios.get(\n            `${baseURL}${search}${maxResult}${type}${key}${topicId}&q=${randomArtist}`\n        )\n        console.log(response.data)\n        setYoutubeData(response.data)\n    }\n//Lyrics API Call - Happi.dev/docs/music\nconst [lyricsData, setLyricsData] = React.useState(null)\nconst baseLyricsURL = \"https://api.happi.dev/v1/music?\";\n// const lyricsQ = \"q=\" + randomArtist\nconst hasLyrics = \"&lyrics=1\";\nconst limit = \"&limit=\";\nconst lyricsType = \"&type=\";\n//api key 1\n// const apiLyricsKey = \"&apikey=6d400baq5E0tR7e8ItaBRyijAyJVpD9qLDYxcli0AwBHLoMayAPtZaNr\";   \n//api key 2\n// const apiLyricsKey = \"&apikey=78e089Xdo4n4bW6uzrz5HaYLJ3E801KK7uQ0LQlJFsZ7ROy1mr0ZDyjR\"; \n//api Key 3\nconst apiLyricsKey = \"&apikey=8dcb582VuyRPwwIk4wEDUbJ5xTmiQvRE7QUfgBFrTJGVIkcmYqH4r9Nh\"; \n\n\n    const getLyricsArray = async (searchTerm) => {\n        try{\n        const response = await Axios.get(\n        `${baseLyricsURL}${limit}${apiLyricsKey}${lyricsType}${hasLyrics}&q=${searchTerm}`\n        )\n        console.log(searchTerm)\n        console.log(response.data)\n        console.log(response.data.result[0].api_lyrics)\n        getLyricsData(response.data.result[0].api_lyrics)\n        } catch (error) {\n            console.log('no lyrics found')\n            getYoutubeData(searchTerm)\n            setLyricsData(null)\n        }\n    }\n    \n    const getLyricsData = async (data) => {\n        console.log(data)\n        const response = await Axios.get(\n            data + '?' + apiLyricsKey\n        )\n        console.log(response.data)\n        console.log(response.data.result.lyrics)\n        console.log(response.data.result.track + ' ' + response.data.result.artist )\n        setLyricsData(response.data)\n        getYoutubeData(response.data.result.track + ' ' + response.data.result.artist)\n    }\n\n    React.useEffect(()=>{\n        getLyricsArray(randomArtist)\n        // randomVideo(randomArtist)\n        console.log('running use effect')\n    },[])\n\n\n    return(\n        <div>\n        <br/>\n            <div className = \"indexTop\">\n                <h1 className = \"heading\">Welcome to Lyrios</h1>\n                <h3>A True Music Experience. Submit Your Song Search Below</h3>\n            </div>\n            <SearchBar songSearch={getLyricsArray}/>\n            {/* Adding && to the line below checks if there is data in youtubeData */}\n                  \n            { youtubeData  && <SearchOutput youtubeData={youtubeData} lyricsData={lyricsData} />}\n            {/* <div className = \"videoItem\">\n            <div>{youtubeData ? <><h4 className =\"videoTitle\">{youtubeData.items[0].snippet.title}</h4>  <YouTube videoId= {youtubeData.items[0].id.videoId}/> </> :\n            'No YouTube data was gathered'}</div>\n            <button className = \"button is-info\">Save to My Playlist</button>\n            <br/>\n            <p>{lyricsData ? <p className=\"lyrics\">{lyricsData}</p> : 'No Lyrics Data Was Found'}</p>\n            </div> */}\n        </div>\n    )\n}\n\nexport default GetSearch\n","import React from 'react';\nimport {GoogleLogin} from 'react-google-login'\nimport {GoogleLogout} from 'react-google-login'\nimport {useHistory} from 'react-router-dom'\n\nconst Signin = () => {\n\n\tlet history = useHistory();\n\tconsole.log(localStorage.getItem('SessionEmail'))\n\n\tconst responseGoogle = (response) => {\n\t\tconsole.log(response);\n\t\tconsole.log(response.profileObj)\n\t\tlocalStorage.setItem('SessionEmail', response.profileObj.email)\n\t\tlocalStorage.setItem('SessionName', response.profileObj.name)\n\t\thistory.push('/show')\n\n\t}\n\n\n\n\n\tconst responseGoogleFail = (response) => {\n\t\tconsole.log(response);\n\t}\n\n\t// const logoutSucesss = () => {\n\t// \tconsole.log(localStorage.getItem('SessionEmail'))\n\t// \tlocalStorage.removeItem('SessionEmail');\n\t// \tconsole.log('logged our successfully')\n\n\t// }\n\tconst logoutGoogle = () => {\n\t\tconsole.log('logout was succcessful')\n\t\tlocalStorage.removeItem('SessionEmail')\n\t\thistory.push('/')\n\t\t\n\t}\nreturn (\n\t<div>\n\t{/* <h1>Sign in / Sign Out</h1> */}\n\n\t{localStorage.getItem('SessionEmail') === null ? <>\n\t<GoogleLogin\n\tclientId = \"174189846765-j4m2iko8mnar7ic4c0p0701e5g5gosq9.apps.googleusercontent.com\"\n\tonSuccess={responseGoogle}\n\tonFailure={responseGoogleFail}\n\t/>     ; </>\n\t:\n\t<GoogleLogout\n\tclientId = \"174189846765-j4m2iko8mnar7ic4c0p0701e5g5gosq9.apps.googleusercontent.com\"\n\tbuttonText=\"Sign Out\"\n\tonLogoutSuccess={logoutGoogle}\n\n\t/> \n\t}\n\t</div>\n);\n};\n\nexport default Signin;\n","import React from 'react';\nimport YouTube from 'react-youtube'\nimport Axios from 'axios'\n\n\nconst UserOutput = (data) => {\n    console.log(data.userData)\n    console.log(data.userData[0])\n    console.log(data.userData[0]._id)\n    const deleteFavorite = async () => {\n    await Axios.delete(` https://lyrios21.herokuapp.com/favsong/${data.userData[0]._id}`)\n    console.log('Deleting favorite song')\n    window.location.reload();\n    }\n\n    // let getinfo = async() => {\n    //     let response =  await Axios.get('http://localhost:4000/favsong')\n    //     const userFavs = []\n    //     response.data.forEach((elm)=>{\n    //         if (elm.email === localStorage.getItem('SessionEmail')){\n    //             userFavs.push(elm)\n    //         }\n    //     })\n    //     const newFavs = userFavs.map((elm)=>{\n    //         return(\n    //             <div>\n    //                 <p>{elm.favoriteSong}</p>\n    //                 <button onClick={() => deleteFavorite(elm._id)}>Delete Favorite</button>\n    //             </div>\n    //         )\n    //     })\n    //     setMyFavs(newFavs)\n    // }\n\n\n    console.log(data.youtubeData)\n    console.log(data.youtubeData.items[0].snippet.title)\n    console.log(data.lyricsData)\n    // console.log(lyricsData)\n    return(\n       <div>\n            \n            {/* <YouTube videoId= {youtubeData.results.items[0].id.videoId} /> */}\n            <div className = 'videoItem'>\n            <div>{data.youtubeData ? <><h4 className =\"videoTitle\">{data.youtubeData.items[0].snippet.title}</h4>  <YouTube videoId= {data.youtubeData.items[0].id.videoId}/> </> :\n            'No YouTube data was gathered'}\n           \n            </div>\n            <br/>\n            {data.userData[0].whyFavorite?<>\n            \n            \n            <h4 className = \"loveReason\">Why this song? {data.userData[0].whyFavorite}</h4>\n            <br/>\n            <a href = '/edit'><button className = \"button is-info\" >Let Us Know / Edit Why You Love This Song!</button></a> <button className = \"button is-danger\" onClick={deleteFavorite} >Delete Song</button>\n            <br/>\n            <br/>\n            <h2 className = 'bold'>To edit your favorite song simply click edit to search for a new favorite tune!</h2>\n            </>: ''}\n            <br/>\n            <div>{data.lyricsData ? <> \n            <br/>\n            <p className = \"lyrics\">{data.lyricsData.result.lyrics}</p>\n            </>: 'No Lyrics Data Was Found'}</div>\n            {/* {youtubeData ?   <>     \n            {youtubeData.results.item.map((value, index)=>{\n                console.log(value)\n                return(\n                    <div className = 'videoItem'>\n                       <h4 className = 'videoTitle'>{value.snippet.title}</h4>  <YouTube videoId= {value.id.videoId} className = 'videoIndex'/>\n            \n                    </div>\n                )\n\n            })}</> : <p>Please submit a search request.</p>\n            }   */}\n\n            </div> \n        </div>\n      \n    )\n\n}\n\n\nexport default UserOutput","import React, {useState, useEffect} from 'react';\nimport Axios from 'axios'\nimport YouTube from 'react-youtube'\nimport UserOutput from '../components/UserOutput';\nimport '../index.css';  \n\nfunction ShowFavVideo () {\n    const [infoArray, setInfoArray] = React.useState(null)\n    let getinfo = async() => {\n\n\n        let response =  await fetch(' https://lyrios21.herokuapp.com/favsong')\n\n\n        let data = await response.json();\n        const sessionData = []\n        data.forEach((value)=>{\n            if(value.email === localStorage.getItem('SessionEmail')){\n                sessionData.push(value)\n            }\n        })\n        console.log(sessionData)\n        if (sessionData.length >= 1){\n            setInfoArray(sessionData)\n            getLyricsArray(sessionData)\n        }\n        else console.log('Users data is empty')\n        return console.log(data)\n\n\n    }\n\n\n    \n    // const lyricsArray = [\n    //     \"https://api.happi.dev/v1/music/artists/4862/albums/153808/tracks/13227248/lyrics\",\n    //     \"https://api.happi.dev/v1/music/artists/5130/albums/57340/tracks/13202642/lyrics\",\n    //     \"https://api.happi.dev/v1/music/artists/917/albums/68395/tracks/1117145/lyrics\",\n    //     \"https://api.happi.dev/v1/music/artists/2807/albums/219362/tracks/3452831/lyrics\",\n    //     \"https://api.happi.dev/v1/music/artists/5472/albums/32903/tracks/546400/lyrics\"\n    // ]\n\nconst songtest = 'Tu Amor Me Hace Bien Marc Anthony'\n//YouTube API\nconst baseURL = 'https://www.googleapis.com/youtube/v3';\nconst search = '/search?part=snippet';\nconst maxResult = '&maxResults=1';\nconst keyWord = '&q=rihanna';\nconst type = '&type=video';\n// API Key 1\nconst key = '&key=AIzaSyD5inzevVk7CDg0ipn9yBTXWP_TtekfF0A'; \n// // API Key 2\n// const key = '&key=AIzaSyAjtiGq13vuyxMjQfPS7Ngj0Mny-7ol3GM'\n//API Key 3\n// const key = '&key=AIzaSyAlEKircfin7Ratd0qMcJT50yknQLgk67c';\nconst topicId = '&topicId=04rlf';\nconst [showYoutubeData, setShowYoutubeData] = React.useState(null)\nconst getYoutubeData = async (searchTerm) => {\n    if(searchTerm !== undefined){\n        const response = await Axios.get(\n            `${baseURL}${search}${maxResult}${type}${key}${topicId}&q=${searchTerm}`\n        )\n        setShowYoutubeData(response.data)\n        // setSearchData(response.data)\n        // const youtubeFetch = await response.json();\n        console.log(searchTerm)\n        console.log(response.data)\n        // SearchOutput(response.data)\n        return 'response'\n    } else {\n        console.log('There is no data in search term')\n    }\n\n\n}\n//Lyrics API\nconst songArray = []\n//Lyrics API Call - Happi.dev/docs/music\nconst [showlyricsData, setShowLyricsData] = React.useState([null])\nconst baseLyricsURL = \"https://api.happi.dev/v1/music?\";\nconst hasLyrics = \"&lyrics=1\";\nconst limit = \"&limit=\";\nconst lyricsType = \"&type=\";\n//api key 1\n// const apiLyricsKey = \"&apikey=6d400baq5E0tR7e8ItaBRyijAyJVpD9qLDYxcli0AwBHLoMayAPtZaNr\";   \n//api key 2\n// const apiLyricsKey = \"&apikey=78e089Xdo4n4bW6uzrz5HaYLJ3E801KK7uQ0LQlJFsZ7ROy1mr0ZDyjR\";   \n//api Key 3\nconst apiLyricsKey = \"&apikey=8dcb582VuyRPwwIk4wEDUbJ5xTmiQvRE7QUfgBFrTJGVIkcmYqH4r9Nh\"; \n\n\nconst lyricsArrayNew = ['That La, La, La Rihanna','Across The Room ODESZA']\n\n    const getLyricsArray = async (searchTerm) => {\n        if(searchTerm !== undefined){\n        try{\n        const response = await Axios.get(\n        `${baseLyricsURL}${limit}${apiLyricsKey}${lyricsType}${hasLyrics}&q=${searchTerm[0].favoriteSong}`\n        )\n        console.log(searchTerm)\n        console.log(response.data)\n        console.log(response.data.result[0].api_lyrics)\n        // getLyricsData(response.data.result[0].api_lyrics)\n        const responseLyrics = await Axios.get(\n            response.data.result[0].api_lyrics + '?' + apiLyricsKey\n        )\n        console.log(responseLyrics)\n        setShowLyricsData(responseLyrics.data)\n        console.log(responseLyrics.data)\n        console.log(responseLyrics.data.result.lyrics)\n        getYoutubeData(responseLyrics.data.result.track + ' ' + responseLyrics.data.result.artist)\n        } catch (error) {\n            if(searchTerm){\n                console.log('no lyrics found')\n                getYoutubeData(searchTerm[0].favoriteSong)\n                setShowLyricsData(null)\n            } else console.log('No search term in database, please save a new favorite video')\n        }\n        } else {\n            setShowLyricsData(null)\n            getYoutubeData(searchTerm[0].favoriteSong)\n        }\n    }\n\n    React.useEffect(()=>{\n\n        getinfo()\n        // getLyricsArray(getInfoArray[0].favoriteSong)\n\n        // randomVideo(randomArtist)\n        console.log('running use effect')\n    },[])\n// Post MVP - Be able to push a playlist as opposed to only one video (hungry for more)\n    // const getLyricsData = async (data) => {\n    //     // console.log(data)\n\n    //     const response = await Axios.get(\n    //         data + '?' + apiLyricsKey\n    //     )\n    //     const responses = await Promise.all(lyricsArray.map( async (value,index)=>{\n    //         return await Axios.get(\n    //             value + '?' + apiLyricsKey\n    //         )\n    //     }))\n    //     const responseElements = responses.map((value, index)=>{\n    //         return (\n    //             <>\n    //             <p className = \"lyrics\">{value.data.result.lyrics}</p>\n    //             <hr></hr>\n    //             </>\n    //         )\n    //     })\n\n    //     console.log(responses)\n    //         // getYoutubeData(response.data.result.track + ' ' + response.data.result.artist)\n    //     const YouTuberesponses = await Promise.all(responses.map( async (value,index)=>{\n    //         const searchTerm = value.data.result.track + ' ' + value.data.result.artist\n    //         return await Axios.get(\n    //         `${baseURL}${search}${maxResult}${type}${key}${topicId}&q=${searchTerm}`\n    //         )\n    //     }))\n    //     console.log(YouTuberesponses)\n    //     const YouTubeElements = YouTuberesponses.map((value, index)=> {\n    //         return (\n    //             <>\n    //             <h4 className =\"videoTitle\">{value.data.items[0].snippet.title}</h4>  \n    //             <YouTube videoId= {value.data.items[0].id.videoId}/> \n    //             </>\n    //         )\n    //     })\n    //     const dataArray = []\n    //     YouTubeElements.forEach((element,index) => {\n    //         dataArray.push(YouTubeElements[index])\n    //         dataArray.push(responseElements[index])\n    //     });\n    //     console.log(dataArray)\n    //     setShowLyricsData(dataArray)\n        // setShowYoutubeData(YouTubeElements)\n        // console.log(showlyricsData)\n\n        // return console.log(response.data)\n    // console.log(response.data)\n    //    if(!lyricsArrayNew.includes(response.data)) await lyricsArrayNew.push(response.data)\n       \n        // console.log(response.data.result.lyrics)\n        // console.log(response.data.result.track + ' ' + response.data.result.artist )\n        // setShowLyricsData(response.data) //\n        // getYoutubeData(response.data.result.track + ' ' + response.data.result.artist)\n    // }\n    //     React.useEffect(()=>{\n    //     getLyricsData()\n\n    //     // randomVideo(randomArtist)\n    //     console.log('running use effect')\n    // },[])\n\n\n\n\n    // lyricsArray.map((value,index)=>{\n    //     console.log(value)\n    //     getLyricsData(value)\n    // })\n    // const getArray = (data) => {\n\n    //     for (let i = 0; i < data.length; i++){\n    //         console.log(data[i])\n    //         // getLyricsData(data[i])\n    //     }\n    //     // setLyricsData(lyricsArrayNew)\n    //     console.log(lyricsArrayNew)\n    //     return(\n    //         <div>\n    //         {/* {console.log(lyricsArrayNew[0].)}\n    //         <h2>{lyricsArrayNew[0].result.album}</h2> */}\n    //         <h1>Hello</h1>\n    //         {/* {lyricsArrayNew.map((value,index)=>{\n    //         return(\n    //         <p>test</p>\n    //         )\n    //         })} */}\n    //     </div>\n    //     )\n    // }\n    \nreturn (\n\t<div>\n        <br/>\n        <h1>Your Favorite Song Below (Press the delete button, to delete this song, and chekout our other favorites!)</h1>\n        <br/>\n{/* Hungry for more output */}\n        {/* <div className = 'videoMap'>\n            <div className = 'videoItem'>\n            {/* {showYoutubeData} */}\n            {/* {showlyricsData}\n            </div>\n            </div>\n            <div>  \n        </div> */} \n{/* // Hungry for more above */}\n            {showYoutubeData ?\n            <>{ showYoutubeData  && <UserOutput youtubeData={showYoutubeData} lyricsData={showlyricsData} userData={infoArray} />} </>:\n            <h3 className = 'boldUser'>Whoops, it appears you haven't signed in and picked a new favorite song (or deleted all your previously saved tracks)! Please navigate to the home page and click add to favorites once signed in!</h3>\n            }\n    </div>\n)\n};\n\nexport default ShowFavVideo ;\n","import React from 'react';\n\nconst SignUp = () => {\nreturn (\n\t<div\n\tstyle={{\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'Center',\n\t\talignItems: 'Right',\n\t\theight: '100vh'\n\t}}\n\t>\n\t<h1>Sign up</h1>\n\t</div>\n);\n};\n\nexport default SignUp;\n","import React, {useState, useEffect} from 'react';\nimport Axios from 'axios'\nimport '../index.css';  \nimport { NavLink as Link }from 'react-router-dom';\n\nfunction Edit () {\n\n    const [infoArray, setInfoArray] = React.useState(null)\n    let getinfo = async() => {\n        console.log(localStorage.getItem('SessionEmail'))\n\n        let response =  await fetch (' https://lyrios21.herokuapp.com/favsong')\n\n\n        let data = await response.json();\n        const sessionData = []\n        data.forEach((value)=>{\n            if(value.email === localStorage.getItem('SessionEmail')){\n                sessionData.push(value)\n            }\n        })\n\n        setInfoArray(sessionData)\n        \n        return console.log(sessionData)\n    }\n    const editFavorite = async (searchQuery) => {\n    // console.log(data[0]._id)\n    console.log(infoArray[0]._id)\n    // await Axios.put(`http://localhost:4000/favsong/edit/${infoArray[0]._id}`, {whyFavorite: 'No Reason'})\n    fetch(` https://lyrios21.herokuapp.com/favsong/edit/${infoArray[0]._id}`, {\n        method: 'PUT',\n        body: JSON.stringify({\n            whyFavorite: searchQuery\n  \n        }),\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n    })\n    return console.log('Updating Why I Love This Song')\n\n    }\n        // const [searchQuery, setSearchQuery] = React.useState({searchterm: \"\",});\n    const [searchQuery, setSearchQuery] = React.useState(null);\n    //Updates searchQuery when we type into the form\n    const handleChange = (event) => {\n        setSearchQuery(event.target.value)\n        // console.log(setSearchQuery)\n        console.log(searchQuery)\n    }\n    const handleSubmit = (event) => {\n        //use the event object to detect key and value to update\n        event.preventDefault();\n        //use the search query to pass query to songSearch prop, in new page output\n        editFavorite(searchQuery)\n\n    }\n    React.useEffect(()=>{\n        getinfo()\n        console.log('running use effect')\n    },[])\n    return(\n        <div>\n        <br/>\n\n        <h1>Let Us Know Why You Love The Song Below :)</h1>\n        <br/>\n        {/* onSubmit={handleSubmit} */}\n         <form className = \"field\" onSubmit={handleSubmit} action='/show' >\n                <input className = \"input\"\n                    type = \"text\"\n                    name = \"searchterm\"\n                    onChange={handleChange}\n                    value = {searchQuery}\n                />\n                   \n                {/* <NavLink to='/show'>\n                    <input className = \"button is-info\" type = \"submit\" value = \"submit\" /> \n                </NavLink> */}\n            <input className = \"button is-info\" type = \"submit\" value = \"submit\" /> \n   \n                {/* </Link> */}\n            </form>\n         <a href = '/show'><button className = \"button is-link is-hovered\" >Navigate Back to Your Favorite Song!</button></a>\n\n        </div>\n    )\n}\n\nexport default Edit","import React from 'react';\nimport './App.css';\nimport Navbar from './components/NavBarElements';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './pages/index';\nimport Session from './pages/session';\nimport Show from './pages/show';\nimport User from './pages/user';\nimport Edit from './pages/edit'\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <h1>Lets get started with the Lyrios App!</h1>\n\n        <Navbar />\n        <Switch>\n          <Route path='/session'>\n            <Session/>\n          </Route>\n          <Route path='/show'>\n            <Show/>\n          </Route>\n          <Route path='/user'>\n            <User/>\n          </Route>\n          <Route path ='/edit'>\n            <Edit/>\n          </Route>\n          <Route path='/'>\n            <Home/>\n          </Route>\n        </Switch>\n\n\n\n    </div>\n  );\n        }\n// function App() {\n// return (\n// \t<Router>\n// \t<Navbar />\n// \t<Switch>\n// \t\t<Route path='/' exact component={Home} />\n// \t\t<Route path='/session' component={Session} />\n// \t\t<Route path='/show' component={Show} />\n// \t\t<Route path='/user' component={User} />\n// \t\t{/* <Route path='/team' component={Teams} />\n// \t\t<Route path='/blogs' component={Blogs} />\n// \t\t<Route path='/sign-up' component={SignUp} /> */}\n// \t</Switch>\n// \t</Router>\n// );\n// }\n\nexport default App;\n\n  // return (\n\n\n  //   <div className=\"App\">\n  //     <h1>Lets get started with the Lyrios App!</h1>\n  //     <header className=\"App-header\">\n  //       <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //       <p>\n  //         Edit <code>src/App.js</code> and save to reload.\n  //       </p>\n  //       <a\n  //         className=\"App-link\"\n  //         href=\"https://reactjs.org\"\n  //         target=\"_blank\"\n  //         rel=\"noopener noreferrer\"\n  //       >\n  //         Learn React\n  //       </a>\n  //     </header>\n  //   </div>\n  // );\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n// import { BrowserRouter as Router} from 'react-router-dom';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}